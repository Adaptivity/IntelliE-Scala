apply plugin: 'apt'     // annotation processor plugin eg lombok and dagger
apply plugin: 'forge'   // forge tasks
apply plugin: 'java'    // enables sourcesets
apply plugin: 'shadow'  // enables shadow

apply from: '$projectDir/gradle/scripts/versioning.gradle'
apply from: '$projectDir/gradle/scripts/deobf.gradle'

// http://maven.apache.org/guides/mini/guide-naming-conventions.html
// group = "de.thatsich.intellie"
archivesBaseName = "IntelligentEnergistics"

// needed for pulling new versions from forge
minecraft {
	version = "$MINECRAFT_VERSION-$FORGE_VERSION"
	assetDir = '../Forge/eclipse/assets'
}

buildscript {
	repositories {
		mavenCentral()
		jcenter()
		maven {
			name = "forge"
			url = 'http://files.minecraftforge.net/maven'
		}
		maven {
			name = "sonatype"
			url = 'https://oss.sonatype.org/content/repositories/snapshots/'
		}
		maven {
			name = "shadow-repo"
			url = 'http://dl.bintray.com/content/johnrengelman/gradle-plugins/'
		}
	}
	dependencies {
		classpath "net.minecraftforge.gradle:ForgeGradle:$FORGE_GRADLE_VERSION"
		classpath "com.github.jengelman.gradle.plugins:shadow:$SHADOW_VERSION"
		classpath "org.projectlombok:lombok:$LOMBOK_VERSION"
		classpath "com.squareup.dagger:dagger-compiler:$DAGGER_VERSION"
	}
}

// Ship specific libs with it
shadow {
	artifactSet {
		include 'dagger'
		include 'javax.inject'
	}

	// The resulting file is named <projectname>-<mcversion>-<version>-universal.jar
	baseName = "${archivesBaseName}-${project.minecraft.version}"
	classifier = "universal"
}

// dependencies needed
dependencies {
	compile "com.squareup.dagger:dagger:$DAGGER_VERSION"
	compile "org.projectlombok:lombok:$LOMBOK_VERSION"
}

// exclude layers and integration of (AE2)
sourceSets {
	api {
		java {
			exclude '**/layers/**'
			exclude '**/integration/**'
		}
	}
}

processResources {
	// replace stuff in mcmod.info, nothing else
	from(sourceSets.main.resources.srcDirs) {
		include 'mcmod.info'

		// replace version and mcversion
		expand 'version': project.version.toString(), 'mcversion': $MINECRAFT_VERSION
	}

	// copy everything else, thats not the mcmod.info
	from(sourceSets.main.resources.srcDirs) {
		exclude 'mcmod.info'
	}
}