apply plugin: 'forge'   // forge tasks
apply plugin: 'java'    // enables sourcesets
apply plugin: 'idea'    // enable automatic setup of idea workspace
apply plugin: 'scala'   // enable scala

apply from: 'gradle/scripts/properties.gradle'
apply from: 'gradle/scripts/versioning.gradle'

sourceCompatibility = versions.java
targetCompatibility = versions.java

// needed for pulling new versions from forge
minecraft {
	version = "${versions.minecraft}-${versions.forge}"
	assetDir = "out/assets"
}

buildscript {
	repositories {
		mavenCentral()
		maven {
			name = "forge"
			url = "http://files.minecraftforge.net/maven"
		}
		maven {
			name = "sonatype"
			url = "https://oss.sonatype.org/content/repositories/snapshots/"
		}
	}
	dependencies {
		classpath "net.minecraftforge.gradle:ForgeGradle:${versions.forgegradle}"
	}
}

dependencies {
	compile "com.google.code.findbugs:jsr305:${versions.findbugs}"

	testCompile "junit:junit:${versions.junit}"
	testCompile "org.scalatest:scalatest_2.10:${versions.scalatest}"
	testCompile "org.scalamock:scalamock_2.10:${versions.scalamock}"
}

// resulting file with <archivesBaseName>-<version>-<classifier>
jar {
	archivesBaseName = "IntelligentEnergistics"
	version = "${versions.minecraft}-${versions.project.toString}"
	classifier = "universal"
}

// disable Ant from scala compiling
tasks.withType(ScalaCompile) {
	scalaCompileOptions.useAnt = false
}

processResources {
	// replace stuff in mcmod.info, nothing else
	from(sourceSets.main.resources.srcDirs) {
		include 'mcmod.info'

		// replace version and mcversion
		expand 'version': versions.project.toString, 'mcversion': versions.minecraft
	}
}
