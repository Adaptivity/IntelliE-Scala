def theChangelog = getChangelog()
def formatChangelog = formatChangelog(theChangelog)
def theLastGitPush = getLastGitPush()

curse {
    apiKey = "eb5b9b11-5d6a-405c-baa2-3acac200baee"
    projectId = "222848"
    changelog = formatChangelog
    releaseType = "alpha"
}

private String getChangelog() {
    def outStream = new ByteArrayOutputStream()
    String changelog = ""
    String lastGitPush = getLastGitPush()

    try {
        exec {
            executable = "git"
            args = ["log", "--pretty=%B", "$lastGitPush..HEAD"]
            standardOutput = outStream
        }

        changelog = outStream.toString().trim()
    }
    catch (e) {
        logger.quiet "Error while generating theChangelog: $e"
    }

    return changelog
}

private String getLastGitPush() {
    def outStream = new ByteArrayOutputStream()
    def lastGitPush = ""

    try {
        exec {
            executable = "git"
            args = ["rev-parse", "origin/master"]
            standardOutput = outStream
        }

        lastGitPush = outStream.toString().trim()
    }
    catch (e) {
        logger.quiet "Error while fetching last git tag: $e"
    }

    return lastGitPush
}

private String formatChangelog(String changelog) {
    final String[] split = changelog.split("\n")

    final StringBuilder result = new StringBuilder()
    final StringBuilder additions = new StringBuilder("Additions:\r\n")
    final StringBuilder fixes = new StringBuilder("\r\nFixes:\r\n")
    final StringBuilder changes = new StringBuilder("\r\nChanges:\r\n")
    final StringBuilder removals = new StringBuilder("\r\nRemovals:\r\n")
    final StringBuilder misc = new StringBuilder("\r\nMisc:\r\n")

    for (String s : split) {
        if (s.length() == 0) continue
        String temp = s + "\r\n"

        switch (s.charAt(0)) {
            case '+':
                additions.append(temp)
                break

            case '=':
                fixes.append(temp)
                break

            case '~':
                changes.append(temp)
                break

            case '-':
                removals.append(temp)
                break

            default:
                misc.append(temp)
                break
        }
    }

    if (additions.length() > 14) result.append(additions)
    if (fixes.length() > 14) result.append(fixes)
    if (changes.length() > 16) result.append(changes)
    if (removals.length() > 17) result.append(removals)
    if (misc.length() > 13) result.append(misc)

    return result.toString()
}

task printChangelog(group: 'Debug', description: 'Prints the theChangelog for debugging purposes.') << {
    logger.quiet "The last changelog:\n\n$theChangelog"
}

task printFormatChangelog(group: 'Debug', description: 'Prints the theChangelog in a format for debugging purposes.') << {
    String cl = theChangelog
    String format = formatChangelog(cl)

    logger.quiet "The formatted changelog:\n\n$format"
}

task printLastGitPush(group: 'Debug', description: 'Prints the hash of last git push for debugging purposes') << {
    logger.quiet "The last git push hash: $theLastGitPush"
}